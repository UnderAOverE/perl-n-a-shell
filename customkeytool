#!/usr/bin/ksh

#
# customkeytool.
# JAVA keytool substitute with cleaner output and operations.
# sr87813
# 11/8/2017.
#
# openssl enc -d -base64 -A -v -in ${pem_file} -out [filename].pfx
#

# CA location:
ca_certificates=/apps/shane/SAT/security/CRT/CACertificates
jar_location=/apps/shane/SAT/lib

# Main.
if [[ -f ${jar_location}/CustomKeytool.jar ]]; then
	if [[ $# -eq 1 ]]; then
		keystore_name=${1}
		if [[ -f ${keystore_name} ]]; then
			which java >/dev/null 2>&1
			if [[ $? -eq 0 ]]; then
				clear;ls ${ca_certificates} >/dev/null 2>&1
				if [[ $? -eq 0 ]]; then
					x=`ls ${ca_certificates} | wc -l`
					if [[ ${x} -eq 0 ]]; then
						echo;echo "Warning: there are no files under ${ca_certificates}.";echo
					fi
				else
					echo;echo "Error: ${ca_certificates} not found.";echo
				fi
				java -jar ${jar_location}/CustomKeytool.jar ${keystore_name} ${ca_certificates}
				if [[ $? -eq 7 ]]; then
					echo "	Enter the Key file(Base64) location: "
					read key_file
					echo "	Reading ${key_file}...";sleep 1;
					grep "\-\-\-\-\-BEGIN RSA PRIVATE KEY\-\-\-\-\-" ${key_file} >/dev/null 2>&1
					if [[ $? -eq 0 ]]; then
						echo "  Enter the public file(Base64) location: "
                                        	read pub_file;echo "  Reading ${pub_file}...";sleep 1
						grep "\-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-" ${pub_file} >/dev/null 2>&1
						if [[ $? -eq 0 ]]; then
							echo "  Enter alias name: ";read alias_name
							echo "  Enter destination keystore(p12) name: "
                                        		read ks_name
							if [[ -f ${ks_name} ]]; then
								echo "Error: file ${ks_name} already exists."
								exit 7
							else
                                        			echo "  building PKCS12 file ${ks_name}...";sleep 1
								openssl pkcs12 -export -name ${alias_name} -out ${ks_name} -inkey ${key_file} -in ${pub_file}
								if [[ $? -eq 0 ]]; then
									echo "	created ${ks_name} successfully."
								else
									echo "Error: occured creating ${ks_name}."
									exit 8
								fi
							fi
						else
							echo "Error: not a valid public key."
							exit 6
						fi
					else
						echo "Error: not a valid RSA key."
						exit 5
					fi
				fi
			else
				echo "Error: JAVA not found.";echo
				exit 4
			fi
		else
			echo "Error: File ${keystore_name} not found.";echo
			exit 3
		fi
	else
		echo "Usage error: enter the keystore or certificate name (with path) as input argument.";echo
		exit 2
	fi
else
	echo "Error: CustomKeytool JAR is missing.";echo
	exit 1
fi

echo;exit 0 

#end-customkeytool
