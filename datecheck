#------------------------------------------------------------------------------------------------------------#
#                                                                                                            #
# File Name     : datecheck                                                                                  #
# Description   : multi-purpose date checker.                                                                #
#                 primarily used by the ssltool to calculate the certificate validity.                       #
#                 return codes - 0=valid, 1=expires in 90 days and 2=expired.                                #
# Date of birth : 03/22/2016.                                                                                #
# Version       : 1.0v.                                                                                      #
# Dependencies  : perl core lib.                                                                             #
# Modifications : 03/22/2016 [Original version. 1.0]                                                         #
#                                                                                                            #
#                                                                                                            #
#------------------------------------------------------------------------------------------------------------#

#------------------------------------------------------------------------------------------------------------#
# Initialization.                                                                                            #
#------------------------------------------------------------------------------------------------------------#
use warnings;
use strict;
use Carp;

#------------------------------------------------------------------------------------------------------------#
# Subroutines.                                                                                               #
#------------------------------------------------------------------------------------------------------------#
sub datecheck { # Provide the input as following: mm/dd/[yy]yy (03/22/[19]16)
    my %ignoreyear=("19" => " ", "20" => " ", "21" => " ", "22" => " "); # Should be good until year 2299.
    my $inputDate=shift;
    my $inputisdate = index($inputDate, "/");
    confess "date can only be in mm/dd/yy format!\n" if ($inputisdate < 0);
    my ($iMonth, $iDate, $iYear)=((split /\//, $inputDate)[0], (split /\//, $inputDate)[1], (split /\//, $inputDate)[-1]);
    $iMonth=~s/^0//;$iDate=~s/^0//;
    my $x=length $iYear;
    if ($x == 4) {
       $iYear=~s/(^19|^20|^21|^22)/$ignoreyear{$1}/g;$iYear=~s/^ //;
       $iYear=~s/^0//;
    }
    my ($Second, $Minute, $Hour, $CurrentDate, $CurrentMonth, $CurrentYear, $WeekDay, $DayofTheYear, $Is_dst) = localtime();
    ($CurrentYear -= 100); # Will break after 2099
    ($CurrentMonth += 1);
    if ($CurrentYear > $iYear) {
       2;
    } else {
       if ($CurrentYear == $iYear) {
          if ($CurrentMonth > $iMonth) {
             2;
          } else {
             if ($CurrentMonth == $iMonth) {
                if ($CurrentDate > $iDate) {
                   2;
                } else {
                   1;
                }
             } else {
               if (($iMonth - $CurrentMonth) < 4) {
                  1;
               } else {
                  0;
               }
             }
          }
       } else {
          0;
       }
    }
}

#------------------------------------------------------------------------------------------------------------#
# Main program.                                                                                              #
#------------------------------------------------------------------------------------------------------------#
my $finalresult=datecheck($ARGV[0]);
print $finalresult;

#end_datecheck
